/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  AgentAssignments as PrismaAgentAssignments,
  Properties as PrismaProperties,
} from "@prisma/client";

export class AgentAssignmentsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AgentAssignmentsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.agentAssignments.count(args);
  }

  async agentAssignmentsItems(
    args: Prisma.AgentAssignmentsFindManyArgs
  ): Promise<PrismaAgentAssignments[]> {
    return this.prisma.agentAssignments.findMany(args);
  }
  async agentAssignments(
    args: Prisma.AgentAssignmentsFindUniqueArgs
  ): Promise<PrismaAgentAssignments | null> {
    return this.prisma.agentAssignments.findUnique(args);
  }
  async createAgentAssignments(
    args: Prisma.AgentAssignmentsCreateArgs
  ): Promise<PrismaAgentAssignments> {
    return this.prisma.agentAssignments.create(args);
  }
  async updateAgentAssignments(
    args: Prisma.AgentAssignmentsUpdateArgs
  ): Promise<PrismaAgentAssignments> {
    return this.prisma.agentAssignments.update(args);
  }
  async deleteAgentAssignments(
    args: Prisma.AgentAssignmentsDeleteArgs
  ): Promise<PrismaAgentAssignments> {
    return this.prisma.agentAssignments.delete(args);
  }

  async getProperty(parentId: string): Promise<PrismaProperties | null> {
    return this.prisma.agentAssignments
      .findUnique({
        where: { id: parentId },
      })
      .property();
  }
}
